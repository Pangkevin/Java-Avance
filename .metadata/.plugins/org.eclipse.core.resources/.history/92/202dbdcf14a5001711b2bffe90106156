import java.util.ArrayList;
import java.util.Objects;

public class Car {

	private final String brand;
	private final String licencePlate;
	private final long value;
	private int vetuste; // un niveau de vetuste = 1000

	/**
	 * 
	 * @param brand
	 * @param licencePlate
	 * @param value
	 *            Non n√©gative
	 */
	public Car(String brand, String licencePlate, long value) {
		this.brand = Objects.requireNonNull(brand, "brand non null");
		this.licencePlate = Objects.requireNonNull(licencePlate, "licencePlate non null");

		if (value < 0) {
			throw new IllegalArgumentException();
		}
		this.value = value;

	}

	public Car(String brand, String licencePlate, long value, int vetuste) {
		this(brand, licencePlate, value);

		if (value - vetuste * 1000 < 0) {
			throw new IllegalArgumentException();
		}
		this.vetuste = Objects.requireNonNull(vetuste, "vetuste non null");

	}

	public String getBrand() {
		return brand;
	}

	public String getLicencePlate() {
		return licencePlate;
	}

	public long getValue() {
		return this.value - vetuste * 1000;
	}

	@Override
	public String toString() {
		return "Car [brand=" + brand + ", licencePlate=" + licencePlate + ", value=" + value + "]";
	}

	public boolean equals(Car car) {

		if (this.getBrand() == car.getBrand() && this.getValue() == car.getValue()
				&& this.getLicencePlate() == car.getLicencePlate()) {

			return true;
		}

		return false;
	}

	@override
	public boolean equals(Objects obj) {

	}

	public static void main(String[] args) {

		Car a = new Car("Audi", "41abd75", 10000);
		Car b = new Car("BMW", "42abc75", 9000);
		Car c = new Car("BMW", "42abc75", 9000);
		Car d = a;
		/*
		 * System.out.println(a == b); System.out.println(b == c);
		 * System.out.println(a == d); System.out.println(a.equals(b));
		 * System.out.println(b.equals(c)); System.out.println(a.equals(d));
		 */

		ArrayList<Car> list = new ArrayList<>();
		list.add(a);
		list.add(b);

		System.out.println(list.indexOf(a));
		System.out.println(list.indexOf(b));
		System.out.println(list.indexOf(c));
		System.out.println(b.equals(c));
	}

}
